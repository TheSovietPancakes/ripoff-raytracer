name: Build and Release

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest]
        architecture: [x64]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Install Dependencies for Linux
      if: matrix.os == 'ubuntu-20.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libopencl-dev

    - name: Install Dependencies for Windows
      if: matrix.os == 'windows-latest'
      run: |
        choco install cmake
        choco install opencl-headers
        choco install opencl-dev

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release

    - name: Build the Project
      run: |
        cd build
        cmake --build . --config Release

    - name: Create GitHub Release
      id: release
      run: |
        # Generate a new version based on the Git tag or commit hash
        version=$(date +'%Y%m%d%H%M%S')
        gh release create "v$version" build/executable-name --title "Release $version" --notes "Automated release for commit $GITHUB_SHA"

    - name: Upload Executable to GitHub Release
      run: |
        # Upload the executable to the release
        gh release upload "v$version" build/executable-name
